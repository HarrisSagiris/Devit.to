<!DOCTYPE html>
<html lang="en" data-theme="dark">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API Marketplace - Devit.to</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/css/style.css">
    <style>
        :root {
            --primary: #4F46E5;
            --primary-hover: #4338CA;
            --bg: #0F172A;
            --bg-card: #1E293B;
            --text: #F8FAFC;
            --text-muted: #94A3B8;
            --border: #334155;
            --shadow: 0 4px 12px rgba(0,0,0,0.3);
            --gradient: linear-gradient(135deg, #4F46E5, #4338CA);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: var(--bg);
            min-height: 100vh;
            font-family: 'Inter', sans-serif;
            color: var(--text);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            background: var(--gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .header p {
            color: var(--text-muted);
            font-size: 1.1rem;
        }

        .api-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
        }

        .api-card {
            background: var(--bg-card);
            border-radius: 1rem;
            padding: 1.75rem;
            transition: all 0.3s ease;
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
            display: flex;
            flex-direction: column;
            gap: 1.25rem;
        }

        .api-card:hover {
            transform: translateY(-4px);
            border-color: var(--primary);
            box-shadow: 0 8px 16px rgba(79, 70, 229, 0.2);
        }

        .api-header {
            display: flex;
            align-items: center;
            gap: 1.25rem;
        }

        .api-icon {
            width: 56px;
            height: 56px;
            border-radius: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: var(--gradient);
            font-size: 1.75rem;
            box-shadow: 0 4px 8px rgba(79, 70, 229, 0.3);
        }

        .api-title {
            font-size: 1.4rem;
            font-weight: 700;
            letter-spacing: -0.02em;
        }

        .api-description {
            color: var(--text-muted);
            font-size: 1.1rem;
            line-height: 1.7;
        }

        .api-meta {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding-top: 1rem;
            border-top: 1px solid var(--border);
        }

        .api-price {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary);
        }

        .api-stats {
            display: flex;
            gap: 1.5rem;
            color: var(--text-muted);
            font-size: 1.1rem;
        }

        .api-stats span {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .api-stats i {
            font-size: 1.2rem;
            color: var(--primary);
        }

        .api-info {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-size: 0.95rem;
            color: var(--text-muted);
        }

        .api-info span {
            display: flex;
            align-items: center;
            gap: 0.4rem;
        }

        .api-info i {
            font-size: 1rem;
        }

        .api-badge {
            background: rgba(79, 70, 229, 0.1);
            color: var(--primary);
            padding: 0.4rem 0.8rem;
            border-radius: 1rem;
            font-size: 0.9rem;
            font-weight: 600;
        }

        /* Rest of the styles remain unchanged */
        .search-bar {
            margin-bottom: 2rem;
            display: flex;
            gap: 1rem;
        }

        .search-input {
            flex: 1;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            border: 1px solid var(--border);
            background: var(--bg-card);
            color: var(--text);
            font-size: 1rem;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
        }

        .filter-select {
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            border: 1px solid var(--border);
            background: var(--bg-card);
            color: var(--text);
            font-size: 1rem;
        }

        .post-api-btn {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            cursor: pointer;
            font-weight: 600;
            transition: background 0.2s;
            text-decoration: none;
        }

        .post-api-btn:hover {
            background: var(--primary-hover);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 1000;
            overflow-y: auto;
        }

        .modal-content {
            background: var(--bg-card);
            max-width: 600px;
            margin: 2rem auto;
            padding: 2rem;
            border-radius: 1rem;
            position: relative;
        }

        .close-modal {
            position: absolute;
            top: 1rem;
            right: 1rem;
            cursor: pointer;
            font-size: 1.5rem;
            color: var(--text-muted);
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .form-group input,
        .form-group textarea,
        .form-group select {
            width: 100%;
            padding: 0.75rem;
            border-radius: 0.5rem;
            border: 1px solid var(--border);
            background: var(--bg);
            color: var(--text);
            font-size: 1rem;
        }

        .form-group textarea {
            min-height: 150px;
            resize: vertical;
        }

        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>API Marketplace</h1>
            <p>Discover, integrate, and sell powerful APIs for your applications</p>
        </header>

        <div class="search-bar">
            <input type="text" class="search-input" placeholder="Search APIs...">
            <select class="filter-select">
                <option value="all">All Categories</option>
                <option value="payment">Payment</option>
                <option value="auth">Authentication</option>
                <option value="data">Data & Analytics</option>
                <option value="ai">AI & ML</option>
            </select>
            <% if (user) { %>
                <button class="post-api-btn" onclick="openPostModal()">
                    <i class="fas fa-plus"></i> Post Your API
                </button>
            <% } else { %>
                <a href="/login" class="post-api-btn">
                    <i class="fas fa-sign-in-alt"></i> Login to Post
                </a>
            <% } %>
        </div>

        <div class="api-grid" id="apiGrid">
            <!-- API cards will be dynamically inserted here -->
        </div>
    </div>

    <!-- Modal for posting new API -->
    <div class="modal" id="postModal">
        <div class="modal-content">
            <span class="close-modal" onclick="closePostModal()">&times;</span>
            <h2>Post Your API</h2>
            <form id="postApiForm">
                <div class="form-group">
                    <label for="apiName">API Name</label>
                    <input type="text" id="apiName" name="name" required>
                    <div class="error-message" id="nameError"></div>
                </div>
                <div class="form-group">
                    <label for="apiCategory">Category</label>
                    <select id="apiCategory" name="category" required>
                        <option value="payment">Payment</option>
                        <option value="auth">Authentication</option>
                        <option value="data">Data & Analytics</option>
                        <option value="ai">AI & ML</option>
                    </select>
                    <div class="error-message" id="categoryError"></div>
                </div>
                <div class="form-group">
                    <label for="apiDescription">Description</label>
                    <textarea id="apiDescription" name="description" required></textarea>
                    <div class="error-message" id="descriptionError"></div>
                </div>
                <div class="form-group">
                    <label for="apiDocs">API Documentation URL</label>
                    <input type="url" id="apiDocs" name="docs" required>
                    <div class="error-message" id="docsError"></div>
                </div>
                <div class="form-group">
                    <label for="apiPrice">Price ($/month)</label>
                    <input type="number" id="apiPrice" name="price" min="0" step="0.01" required>
                    <div class="error-message" id="priceError"></div>
                </div>
                <button type="submit" class="post-api-btn">Post API</button>
            </form>
        </div>
    </div>

    <script>
        // Initialize apis array with data from server
        const apis = JSON.parse('<%- JSON.stringify(apis || []) %>');

        function openPostModal() {
            document.getElementById('postModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }

        function closePostModal() {
            document.getElementById('postModal').style.display = 'none';
            document.body.style.overflow = 'auto';
            // Clear form and errors
            document.getElementById('postApiForm').reset();
            document.querySelectorAll('.error-message').forEach(el => {
                el.style.display = 'none';
                el.textContent = '';
            });
        }

        function getCategoryIcon(category) {
            const icons = {
                payment: 'fa-credit-card',
                auth: 'fa-lock',
                data: 'fa-database',
                ai: 'fa-robot'
            };
            return icons[category] || 'fa-code';
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'short', 
                day: 'numeric' 
            });
        }

        function renderApis(apisToRender = apis) {
            const grid = document.getElementById('apiGrid');
            grid.innerHTML = apisToRender.map(api => `
                <div class="api-card" data-category="${api.category}">
                    <div class="api-header">
                        <div class="api-icon">
                            <i class="fas ${getCategoryIcon(api.category)}"></i>
                        </div>
                        <div>
                            <h2 class="api-title">${api.name}</h2>
                            <div class="api-info">
                                <span><i class="fas fa-calendar"></i> ${formatDate(api.createdAt)}</span>
                                <span class="api-badge">${api.category}</span>
                            </div>
                        </div>
                    </div>
                    <p class="api-description">${api.description}</p>
                    <div class="api-meta">
                        <div class="api-info">
                            <span><i class="fas fa-link"></i> <a href="${api.documentationUrl}" target="_blank" style="color: var(--primary);">Documentation</a></span>
                            <span><i class="fas fa-user"></i> ${api.publisher ? api.publisher.username : 'Unknown'}</span>
                        </div>
                        <div style="display: flex; justify-content: space-between; align-items: center;">
                            <span class="api-price">$${api.price}/month</span>
                            <div class="api-stats">
                                <span><i class="fas fa-star"></i> ${api.rating || 0}</span>
                                <span><i class="fas fa-users"></i> ${api.users || 0}</span>
                            </div>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Add search and filter functionality
        const searchInput = document.querySelector('.search-input');
        const filterSelect = document.querySelector('.filter-select');

        function filterAPIs() {
            const searchTerm = searchInput.value.toLowerCase();
            const filterValue = filterSelect.value;

            const filteredApis = apis.filter(api => {
                const matchesSearch = api.name.toLowerCase().includes(searchTerm) || 
                                    api.description.toLowerCase().includes(searchTerm);
                const matchesCategory = filterValue === 'all' || api.category === filterValue;
                return matchesSearch && matchesCategory;
            });

            renderApis(filteredApis);
        }

        searchInput.addEventListener('input', filterAPIs);
        filterSelect.addEventListener('change', filterAPIs);

        // Close modal when clicking outside
        window.onclick = function(event) {
            if (event.target == document.getElementById('postModal')) {
                closePostModal();
            }
        }

        // Handle form submission
        document.getElementById('postApiForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Clear previous errors
            document.querySelectorAll('.error-message').forEach(el => {
                el.style.display = 'none';
                el.textContent = '';
            });

            const formData = new FormData(e.target);
            const data = Object.fromEntries(formData.entries());

            try {
                const response = await fetch('/api', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    apis.unshift(result.api);
                    renderApis();
                    closePostModal();
                    e.target.reset();
                } else {
                    if (result.error) {
                        // Show error message
                        const errorField = document.getElementById(`${result.field}Error`);
                        if (errorField) {
                            errorField.textContent = result.error;
                            errorField.style.display = 'block';
                        } else {
                            alert(result.error);
                        }
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while posting the API. Please try again.');
            }
        });

        // Initial render
        renderApis();
    </script>
</body>
</html>
