<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Communities | Devit.to</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    :root {
      --primary: #8858ED;
      --primary-dark: #6E3AD6;
      --bg-dark: #1a1a1a;
      --bg-card: #2d2d2d;
      --text-light: #ffffff;
      --text-muted: #999;
      --border: #404040;
      --shadow: 0 2px 8px rgba(0,0,0,0.3);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Inter', sans-serif;
      line-height: 1.6;
      color: var(--text-light);
      background: var(--bg-dark);
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 2rem;
    }

    .header h1 {
      color: var(--primary);
      font-size: 2rem;
    }

    .create-btn {
      background: var(--primary);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      text-decoration: none;
      font-weight: 600;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .create-btn:hover {
      background: var(--primary-dark);
      transform: translateY(-2px);
    }

    .search-bar {
      margin-bottom: 2rem;
      display: flex;
      gap: 1rem;
    }

    .search-input {
      flex: 1;
      padding: 0.75rem;
      border: 1px solid var(--border);
      border-radius: 8px;
      font-size: 1rem;
      background: var(--bg-card);
      color: var(--text-light);
    }

    .filter-select {
      padding: 0.75rem;
      border: 1px solid var(--border);
      border-radius: 8px;
      font-size: 1rem;
      background: var(--bg-card);
      color: var(--text-light);
    }

    .communities-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 2rem;
    }

    .community-card {
      background: var(--bg-card);
      border-radius: 12px;
      padding: 1.5rem;
      box-shadow: var(--shadow);
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .community-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.4);
    }

    .community-header {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .community-icon {
      width: 50px;
      height: 50px;
      background: var(--primary);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-size: 1.5rem;
    }

    .community-name {
      font-size: 1.25rem;
      font-weight: 600;
      color: var(--text-light);
    }

    .community-description {
      color: var(--text-muted);
      margin-bottom: 1rem;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    .community-stats {
      display: flex;
      gap: 1rem;
      color: var(--text-muted);
      font-size: 0.9rem;
    }

    .stat {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .join-btn {
      margin-top: 1rem;
      width: 100%;
      padding: 0.75rem;
      background: transparent;
      border: 2px solid var(--primary);
      color: var(--primary);
      border-radius: 8px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .join-btn:hover {
      background: var(--primary);
      color: white;
    }

    .joined {
      background: var(--primary);
      color: white;
    }

    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.7);
      z-index: 1000;
    }

    .modal-content {
      position: relative;
      background: var(--bg-card);
      width: 90%;
      max-width: 600px;
      margin: 50px auto;
      padding: 2rem;
      border-radius: 12px;
    }

    .close-modal {
      position: absolute;
      right: 1rem;
      top: 1rem;
      font-size: 1.5rem;
      cursor: pointer;
      color: var(--text-muted);
    }

    .modal-form input,
    .modal-form textarea {
      width: 100%;
      padding: 0.75rem;
      margin: 0.5rem 0;
      border: 1px solid var(--border);
      border-radius: 8px;
      background: var(--bg-dark);
      color: var(--text-light);
    }

    .modal-form button {
      width: 100%;
      margin-top: 1rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Communities</h1>
      <% if (user) { %>
        <button class="create-btn" onclick="openCreateModal()">Create Community</button>
      <% } %>
    </div>

    <div class="search-bar">
      <input type="text" class="search-input" placeholder="Search communities...">
      <select class="filter-select">
        <option value="newest">Newest</option>
        <option value="popular">Most Popular</option>
        <option value="active">Most Active</option>
      </select>
    </div>

    <div class="communities-grid">
      <% communities.forEach(community => { %>
        <div class="community-card" onclick="window.location.href='/community/<%= community._id %>'">
          <div class="community-header">
            <div class="community-icon">
              <i class="<%= community.icon %>"></i>
            </div>
            <h2 class="community-name"><%= community.name %></h2>
          </div>
          <p class="community-description"><%= community.description %></p>
          <div class="community-stats">
            <div class="stat">
              <i class="fas fa-users"></i>
              <span><%= community.members.length %> members</span>
            </div>
            <div class="stat">
              <i class="fas fa-file-alt"></i>
              <span><%= community.posts.length %> posts</span>
            </div>
          </div>
          <% if (user) { %>
            <button class="join-btn <%= community.members.includes(user._id) ? 'joined' : '' %>" 
                    data-community-id="<%= community._id %>"
                    onclick="event.stopPropagation(); handleJoinClick(this)">
              <%= community.members.includes(user._id) ? 'Joined' : 'Join Community' %>
            </button>
          <% } %>
        </div>
      <% }) %>
    </div>
  </div>

  <!-- Create Community Modal -->
  <div id="createModal" class="modal">
    <div class="modal-content">
      <span class="close-modal" onclick="closeCreateModal()">&times;</span>
      <h2 style="margin-bottom: 1.5rem; color: var(--primary);">Create New Community</h2>
      <form class="modal-form" onsubmit="handleCreateCommunity(event)">
        <input type="text" id="communityName" placeholder="Community Name" required>
        <textarea id="communityDescription" placeholder="Community Description" rows="4" required></textarea>
        <input type="text" id="communityIcon" placeholder="Icon Class (e.g. fas fa-code)" required>
        <button type="submit" class="create-btn">Create Community</button>
      </form>
    </div>
  </div>

  <script>
    // Modal functions
    function openCreateModal() {
      document.getElementById('createModal').style.display = 'block';
    }

    function closeCreateModal() {
      document.getElementById('createModal').style.display = 'none';
    }

    // Handle create community submission
    async function handleCreateCommunity(event) {
      event.preventDefault();
      
      const formData = {
        name: document.getElementById('communityName').value,
        description: document.getElementById('communityDescription').value,
        icon: document.getElementById('communityIcon').value
      };

      try {
        const response = await fetch('/api/communities', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.ok) {
          window.location.reload();
        } else {
          const error = await response.json();
          alert(error.message || 'Failed to create community');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to create community');
      }
    }

    // Handle join/leave functionality
    async function handleJoinClick(button) {
      const communityId = button.dataset.communityId;
      const action = button.classList.contains('joined') ? 'leave' : 'join';

      try {
        const response = await fetch(`/api/communities/${communityId}/${action}`, {
          method: 'POST',
          credentials: 'include'
        });

        const data = await response.json();

        if (data.success) {
          button.classList.toggle('joined');
          button.textContent = action === 'join' ? 'Joined' : 'Join Community';
        }
      } catch (error) {
        console.error('Error:', error);
        alert('Failed to ' + action + ' community');
      }
    }

    // Search and filter functionality
    document.addEventListener('DOMContentLoaded', () => {
      const searchInput = document.querySelector('.search-input');
      const filterSelect = document.querySelector('.filter-select');
      
      async function handleSearch() {
        const searchTerm = searchInput.value.toLowerCase();
        const filter = filterSelect.value;
        
        try {
          const response = await fetch(`/api/communities/search?query=${searchTerm}&sort=${filter}`);
          const data = await response.json();
          updateCommunitiesDisplay(data.communities);
        } catch (error) {
          console.error('Search error:', error);
        }
      }

      searchInput.addEventListener('input', handleSearch);
      filterSelect.addEventListener('change', handleSearch);
    });

    // Close modal when clicking outside
    window.onclick = function(event) {
      if (event.target === document.getElementById('createModal')) {
        closeCreateModal();
      }
    }
  </script>
</body>
</html>
