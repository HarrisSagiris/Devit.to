<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Devit Git - Code Repository</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            /* Default theme colors - can be customized */
            --primary: #0a95ff;
            --primary-hover: #0074cc;
            --bg: #0d1117;
            --bg-card: #161b22;
            --text: #c9d1d9;
            --text-muted: #8b949e;
            --border: #30363d;
            --shadow: 0 4px 12px rgba(0,0,0,0.15);
            --success: #2ea043;
            --error: #f85149;
            --warning: #d29922;
            --header-bg: #161b22;
            --button-bg: #238636;
            --button-hover: #2ea043;
            --input-bg: #0d1117;
            --input-border: #30363d;
            --input-text: #c9d1d9;
            --upload-area-bg: rgba(13, 17, 23, 0.3);
            --upload-area-border: #30363d;
            --file-item-bg: #161b22;
            --file-item-hover: #1f2428;
            --status-bg: rgba(13, 17, 23, 0.3);
        }

        /* Light theme */
        [data-theme="light"] {
            --bg: #ffffff;
            --bg-card: #f6f8fa;
            --text: #24292f;
            --text-muted: #57606a;
            --border: #d0d7de;
            --header-bg: #f6f8fa;
            --button-bg: #2da44e;
            --button-hover: #2c974b;
            --input-bg: #ffffff;
            --input-border: #d0d7de;
            --input-text: #24292f;
            --upload-area-bg: rgba(246, 248, 250, 0.5);
            --upload-area-border: #d0d7de;
            --file-item-bg: #ffffff;
            --file-item-hover: #f6f8fa;
            --status-bg: rgba(246, 248, 250, 0.5);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            transition: background-color 0.3s ease, color 0.3s ease;
        }

        body {
            background-color: var(--bg);
            min-height: 100vh;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--text);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            background: var(--header-bg);
            border-bottom: 1px solid var(--border);
            margin-bottom: 2rem;
            border-radius: 6px;
        }

        .header h1 {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.5rem;
        }

        .header-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .theme-toggle {
            background: none;
            border: 1px solid var(--border);
            padding: 0.5rem;
            border-radius: 4px;
            color: var(--text);
            cursor: pointer;
        }

        .repo-section {
            background: var(--bg-card);
            border: 1px solid var(--border);
            border-radius: 6px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
        }

        .repo-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .branch-selector {
            position: relative;
            display: inline-block;
        }

        .branch-button {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            background: var(--input-bg);
            border: 1px solid var(--border);
            border-radius: 4px;
            color: var(--text);
            cursor: pointer;
        }

        .upload-area {
            border: 2px dashed var(--upload-area-border);
            border-radius: 6px;
            padding: 2rem;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: var(--upload-area-bg);
        }

        .upload-area:hover {
            border-color: var(--primary);
            background: rgba(10, 149, 255, 0.05);
        }

        .upload-area i {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 1rem;
        }

        .file-list {
            margin-top: 2rem;
            max-height: 400px;
            overflow-y: auto;
        }

        .file-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0.75rem;
            border: 1px solid var(--border);
            border-radius: 4px;
            margin-bottom: 0.5rem;
            background: var(--file-item-bg);
            transition: all 0.2s ease;
        }

        .file-item:hover {
            background: var(--file-item-hover);
        }

        .file-info {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .file-actions {
            display: flex;
            gap: 0.5rem;
        }

        .file-action-btn {
            padding: 0.25rem 0.5rem;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: var(--input-bg);
            color: var(--text);
            cursor: pointer;
        }

        .commit-section {
            margin-top: 2rem;
            background: var(--bg-card);
            padding: 1.5rem;
            border-radius: 6px;
            border: 1px solid var(--border);
        }

        .commit-input {
            width: 100%;
            padding: 0.75rem;
            background: var(--input-bg);
            border: 1px solid var(--input-border);
            border-radius: 4px;
            color: var(--input-text);
            margin-bottom: 1rem;
            font-family: inherit;
        }

        .commit-description {
            width: 100%;
            min-height: 100px;
            padding: 0.75rem;
            background: var(--input-bg);
            border: 1px solid var(--input-border);
            border-radius: 4px;
            color: var(--input-text);
            margin-bottom: 1rem;
            font-family: inherit;
            resize: vertical;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            background: var(--button-bg);
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
            transition: background 0.2s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn:hover {
            background: var(--button-hover);
        }

        .status {
            margin-top: 1rem;
            padding: 1rem;
            border-radius: 6px;
            background: var(--status-bg);
            border: 1px solid var(--border);
        }

        #ws-status {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: var(--error);
            margin-right: 0.5rem;
            transition: background 0.3s ease;
        }

        #ws-status.connected {
            background: var(--success);
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }
            
            .header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .repo-header {
                flex-direction: column;
                gap: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fab fa-git-alt"></i> Devit Git</h1>
            <div class="header-controls">
                <div class="connection-status">
                    <span id="ws-status"></span>
                    <span id="connection-text">Disconnected</span>
                </div>
                <button class="theme-toggle" id="theme-toggle">
                    <i class="fas fa-moon"></i>
                </button>
            </div>
        </div>

        <div class="repo-section">
            <div class="repo-header">
                <h2><i class="far fa-folder"></i> Repository: my-awesome-project</h2>
                <div class="branch-selector">
                    <button class="branch-button">
                        <i class="fas fa-code-branch"></i>
                        main
                        <i class="fas fa-chevron-down"></i>
                    </button>
                </div>
            </div>

            <div id="upload-area" class="upload-area">
                <i class="fas fa-cloud-upload-alt"></i>
                <h3>Drag and drop files here</h3>
                <p>or click to select files</p>
                <input type="file" id="file-input" multiple style="display: none">
            </div>

            <div class="file-list" id="file-list">
                <!-- Files will be listed here -->
            </div>

            <div class="commit-section">
                <input type="text" class="commit-input" id="commit-message" placeholder="Enter a short, meaningful commit message">
                <textarea class="commit-description" id="commit-description" placeholder="Add a more detailed description (optional)"></textarea>
                <button class="btn" id="commit-btn">
                    <i class="fas fa-code-commit"></i>
                    Commit Changes
                </button>
            </div>

            <div class="status" id="status-area">
                Ready to receive files...
            </div>
        </div>
    </div>

    <script>
        const ws = new WebSocket('ws://' + window.location.host);
        const statusDot = document.getElementById('ws-status');
        const connectionText = document.getElementById('connection-text');
        const uploadArea = document.getElementById('upload-area');
        const fileInput = document.getElementById('file-input');
        const fileList = document.getElementById('file-list');
        const commitBtn = document.getElementById('commit-btn');
        const statusArea = document.getElementById('status-area');
        const themeToggle = document.getElementById('theme-toggle');
        
        // Theme handling
        themeToggle.addEventListener('click', () => {
            const currentTheme = document.body.getAttribute('data-theme');
            const newTheme = currentTheme === 'light' ? 'dark' : 'light';
            document.body.setAttribute('data-theme', newTheme);
            themeToggle.innerHTML = newTheme === 'light' ? '<i class="fas fa-moon"></i>' : '<i class="fas fa-sun"></i>';
            localStorage.setItem('theme', newTheme);
        });

        // Load saved theme
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            document.body.setAttribute('data-theme', savedTheme);
            themeToggle.innerHTML = savedTheme === 'light' ? '<i class="fas fa-moon"></i>' : '<i class="fas fa-sun"></i>';
        }

        ws.onopen = () => {
            statusDot.classList.add('connected');
            connectionText.textContent = 'Connected';
            updateStatus('Connected to server');
        };

        ws.onclose = () => {
            statusDot.classList.remove('connected');
            connectionText.textContent = 'Disconnected';
            updateStatus('Connection lost');
        };

        ws.onmessage = (event) => {
            const message = JSON.parse(event.data);
            updateStatus(message.status);
        };

        uploadArea.addEventListener('click', () => fileInput.click());
        uploadArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = 'var(--primary)';
            uploadArea.style.background = 'rgba(10, 149, 255, 0.05)';
        });

        uploadArea.addEventListener('dragleave', () => {
            uploadArea.style.borderColor = 'var(--upload-area-border)';
            uploadArea.style.background = 'var(--upload-area-bg)';
        });

        uploadArea.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadArea.style.borderColor = 'var(--upload-area-border)';
            uploadArea.style.background = 'var(--upload-area-bg)';
            handleFiles(e.dataTransfer.files);
        });

        fileInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });

        function handleFiles(files) {
            Array.from(files).forEach(file => {
                const reader = new FileReader();
                reader.onload = () => {
                    addFileToList(file.name, file.size);
                    ws.send(JSON.stringify({
                        type: 'file',
                        name: file.name,
                        content: reader.result
                    }));
                };
                reader.readAsText(file);
            });
        }

        function addFileToList(filename, size) {
            const fileItem = document.createElement('div');
            fileItem.className = 'file-item';
            
            const sizeStr = size < 1024 ? `${size} B` : 
                           size < 1048576 ? `${(size/1024).toFixed(1)} KB` : 
                           `${(size/1048576).toFixed(1)} MB`;

            fileItem.innerHTML = `
                <div class="file-info">
                    <i class="far fa-file-code"></i>
                    <span>${filename}</span>
                    <span style="color: var(--text-muted); font-size: 0.9em;">${sizeStr}</span>
                </div>
                <div class="file-actions">
                    <button class="file-action-btn" title="View file">
                        <i class="far fa-eye"></i>
                    </button>
                    <button class="file-action-btn" title="Remove file">
                        <i class="far fa-trash-alt"></i>
                    </button>
                </div>
            `;
            fileList.appendChild(fileItem);
        }

        commitBtn.addEventListener('click', () => {
            const message = document.getElementById('commit-message').value;
            const description = document.getElementById('commit-description').value;
            
            if (!message) {
                updateStatus('Please enter a commit message');
                return;
            }
            
            ws.send(JSON.stringify({
                type: 'commit',
                message: message,
                description: description
            }));
        });

        function updateStatus(message) {
            statusArea.textContent = message;
        }
    </script>
</body>
</html>
