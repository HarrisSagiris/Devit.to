<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GitHub Repository Explorer</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .repo-card {
            background: var(--bg-card);
            border: 1px solid var(--border);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--shadow);
        }
        .repo-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text);
            margin-bottom: 1rem;
            word-break: break-word;
        }
        .repo-description {
            color: var(--text-muted);
            font-size: 1rem;
            line-height: 1.6;
            margin-bottom: 1rem;
            word-break: break-word;
        }
        .repo-stats {
            display: flex;
            flex-wrap: wrap;
            gap: 1.5rem;
            margin-top: 1rem;
            color: var(--text-muted);
        }
        .search-container {
            margin: 2rem 0;
        }
        .search-input {
            width: 100%;
            max-width: 500px;
            padding: 0.75rem;
            border: 1px solid var(--border);
            border-radius: 4px;
            font-size: 1rem;
        }
        .search-button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 4px;
            cursor: pointer;
            margin-left: 0.5rem;
        }
        .search-button:hover {
            background: var(--primary-hover);
        }
        .user-info {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 2rem;
        }
        .user-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
        }
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }
        .stat-card {
            background: var(--bg-card);
            padding: 1rem;
            border-radius: 8px;
            text-align: center;
            box-shadow: var(--shadow);
        }
        .pagination {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 2rem;
        }
        .page-btn {
            padding: 0.5rem 1rem;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: var(--bg-card);
            color: var(--text);
            cursor: pointer;
        }
        .page-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }
    </style>
</head>
<body>
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">GitHub Repository Explorer</h1>
        
        <div class="search-container">
            <input type="text" id="username" class="search-input" placeholder="Enter GitHub username">
            <button onclick="searchUser()" class="search-button">Search</button>
        </div>

        <div id="user-profile"></div>
        <div id="repos-container"></div>
        <div id="pagination" class="pagination"></div>
    </div>

    <script>
        let currentPage = 1;
        const reposPerPage = 10;
        let allRepos = [];

        async function searchUser() {
            const username = document.getElementById('username').value;
            if (!username) return;

            try {
                const [userResponse, reposResponse] = await Promise.all([
                    fetch(`https://api.github.com/users/${username}`),
                    fetch(`https://api.github.com/users/${username}/repos?sort=updated&per_page=100`)
                ]);

                const userData = await userResponse.json();
                allRepos = await reposResponse.json();

                if (userResponse.status === 404) {
                    alert('User not found');
                    return;
                }

                displayUserProfile(userData);
                displayRepos(1);
                displayPagination();
            } catch (error) {
                console.error('Error:', error);
                alert('Error fetching data from GitHub');
            }
        }

        function displayUserProfile(user) {
            const userProfile = document.getElementById('user-profile');
            userProfile.innerHTML = `
                <div class="user-info">
                    <img src="${user.avatar_url}" alt="${user.login}" class="user-avatar">
                    <div>
                        <h2 class="text-2xl font-bold">${user.name || user.login}</h2>
                        <p class="text-gray-600">${user.bio || ''}</p>
                    </div>
                </div>
                <div class="stats-container">
                    <div class="stat-card">
                        <h3 class="font-bold">Public Repos</h3>
                        <p>${user.public_repos}</p>
                    </div>
                    <div class="stat-card">
                        <h3 class="font-bold">Followers</h3>
                        <p>${user.followers}</p>
                    </div>
                    <div class="stat-card">
                        <h3 class="font-bold">Following</h3>
                        <p>${user.following}</p>
                    </div>
                </div>
            `;
        }

        function displayRepos(page) {
            currentPage = page;
            const startIndex = (page - 1) * reposPerPage;
            const endIndex = startIndex + reposPerPage;
            const paginatedRepos = allRepos.slice(startIndex, endIndex);

            const reposContainer = document.getElementById('repos-container');
            reposContainer.innerHTML = paginatedRepos.map(repo => `
                <div class="repo-card">
                    <h3 class="repo-title">
                        <a href="${repo.html_url}" target="_blank" style="color: var(--primary); text-decoration: none; hover:underline">
                            ${repo.name}
                        </a>
                    </h3>
                    <p class="repo-description">${repo.description || 'No description available'}</p>
                    <div class="repo-stats">
                        <span><i class="fas fa-star"></i> ${repo.stargazers_count} stars</span>
                        <span><i class="fas fa-code-branch"></i> ${repo.forks_count} forks</span>
                        <span><i class="fas fa-circle"></i> ${repo.language || 'N/A'}</span>
                        <span><i class="fas fa-eye"></i> ${repo.watchers_count} watchers</span>
                    </div>
                </div>
            `).join('');
        }

        function displayPagination() {
            const totalPages = Math.ceil(allRepos.length / reposPerPage);
            const pagination = document.getElementById('pagination');
            
            let paginationHTML = '';
            
            if (currentPage > 1) {
                paginationHTML += `<button class="page-btn" onclick="displayRepos(${currentPage - 1})">Previous</button>`;
            }
            
            for (let i = 1; i <= totalPages; i++) {
                paginationHTML += `
                    <button class="page-btn ${currentPage === i ? 'active' : ''}" 
                            onclick="displayRepos(${i})">${i}</button>
                `;
            }
            
            if (currentPage < totalPages) {
                paginationHTML += `<button class="page-btn" onclick="displayRepos(${currentPage + 1})">Next</button>`;
            }
            
            pagination.innerHTML = paginationHTML;
        }
    </script>
</body>
</html>
