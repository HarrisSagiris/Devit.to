<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Developer News - Devit.to</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #0a95ff;
            --primary-hover: #0074cc;
            --bg: #1a1a1a;
            --bg-card: #242424;
            --text: #ffffff;
            --text-muted: #a3a3a3;
            --border: #404040;
            --shadow: 0 4px 12px rgba(0,0,0,0.3);
            --gradient: linear-gradient(135deg, #0a95ff, #00b4d8);
            --upvote: #10b981;
            --downvote: #ef4444;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: var(--bg);
            min-height: 100vh;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--text);
            padding: 2rem;
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 4rem;
            padding: 3rem 0;
            position: relative;
            background: rgba(10, 149, 255, 0.05);
            border-radius: 20px;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--gradient);
            border-radius: 20px 20px 0 0;
        }

        .header h1 {
            font-size: 3.5rem;
            margin-bottom: 1.5rem;
            background: var(--gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-weight: 800;
            letter-spacing: -1px;
        }

        .header p {
            color: var(--text-muted);
            font-size: 1.2rem;
            max-width: 600px;
            margin: 0 auto;
        }

        .news-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
            gap: 2rem;
            padding: 0 1rem;
        }

        .news-card {
            background: var(--bg-card);
            border-radius: 16px;
            overflow: hidden;
            transition: all 0.3s ease;
            border: 1px solid var(--border);
            position: relative;
        }

        .news-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow);
            border-color: var(--primary);
        }

        .news-image {
            width: 100%;
            height: 240px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .news-card:hover .news-image {
            transform: scale(1.05);
        }

        .news-content {
            padding: 2rem;
        }

        .news-source {
            display: inline-block;
            padding: 0.5rem 1rem;
            background: var(--gradient);
            border-radius: 25px;
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 1.2rem;
            box-shadow: 0 2px 8px rgba(10, 149, 255, 0.2);
        }

        .news-title {
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 1.2rem;
            line-height: 1.4;
            color: var(--text);
        }

        .news-description {
            color: var(--text-muted);
            font-size: 1rem;
            line-height: 1.6;
            margin-bottom: 2rem;
        }

        .news-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border);
        }

        .news-date {
            color: var(--text-muted);
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .read-more {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            font-size: 0.95rem;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.2s;
            border: 1px solid var(--primary);
        }

        .read-more:hover {
            background: var(--primary);
            color: white;
        }

        .loading {
            text-align: center;
            padding: 4rem;
            color: var(--text-muted);
            font-size: 1.2rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
        }

        .loading i {
            font-size: 2rem;
            color: var(--primary);
        }

        .vote-buttons {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }

        .vote-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            border: none;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s;
        }

        .upvote {
            background: rgba(16, 185, 129, 0.1);
            color: var(--upvote);
        }

        .upvote:hover {
            background: var(--upvote);
            color: white;
        }

        .downvote {
            background: rgba(239, 68, 68, 0.1);
            color: var(--downvote);
        }

        .downvote:hover {
            background: var(--downvote);
            color: white;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2.5rem;
            }
            
            .news-grid {
                grid-template-columns: 1fr;
            }

            body {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Devit.to News Hub</h1>
            <p>Your daily dose of tech insights, programming updates, and development trends</p>
        </div>

        <div id="news-container" class="news-grid">
            <div class="loading">
                <i class="fas fa-spinner fa-spin"></i>
                <span>Fetching the latest developer news...</span>
            </div>
        </div>
    </div>

    <script>
        // Using the GNews API which has a free tier and allows public access
        const API_KEY = '17178a0bbbc1f220514401f15421e241'; // Replace with your GNews API key
        const API_URL = `https://gnews.io/api/v4/search?q=programming,technology,developer&lang=en&country=us&max=10&apikey=${API_KEY}`;

        fetch(API_URL)
            .then(response => response.json())
            .then(data => {
                const newsContainer = document.getElementById('news-container');
                newsContainer.innerHTML = '';

                data.articles.forEach(article => {
                    const date = new Date(article.publishedAt).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                    });
                    const card = `
                        <div class="news-card">
                            <img class="news-image" src="${article.image || 'default-image.jpg'}" alt="${article.title}" onerror="this.src='https://via.placeholder.com/400x240?text=No+Image+Available'">
                            <div class="news-content">
                                <span class="news-source">${article.source.name}</span>
                                <h2 class="news-title">${article.title}</h2>
                                <p class="news-description">${article.description || 'No description available'}</p>
                                <div class="news-meta">
                                    <span class="news-date">
                                        <i class="far fa-calendar-alt"></i>
                                        ${date}
                                    </span>
                                    <a href="${article.url}" target="_blank" class="read-more">
                                        Read Article
                                        <i class="fas fa-external-link-alt" style="margin-left: 5px;"></i>
                                    </a>
                                </div>
                                <div class="vote-buttons">
                                    <button class="vote-btn upvote" onclick="handleVote(this, 'up')">
                                        <i class="fas fa-arrow-up"></i>
                                        <span class="vote-count">0</span>
                                    </button>
                                    <button class="vote-btn downvote" onclick="handleVote(this, 'down')">
                                        <i class="fas fa-arrow-down"></i>
                                        <span class="vote-count">0</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    `;
                    newsContainer.innerHTML += card;
                });
            })
            .catch(error => {
                console.error('Error fetching news:', error);
                document.getElementById('news-container').innerHTML = `
                    <div class="loading" style="color: #ff4444;">
                        <i class="fas fa-exclamation-circle"></i>
                        <span>Unable to load news at this time. Please try again later.</span>
                    </div>
                `;
            });

        function handleVote(button, type) {
            const countSpan = button.querySelector('.vote-count');
            let count = parseInt(countSpan.textContent);
            
            if (button.classList.contains('active')) {
                count = type === 'up' ? count - 1 : count + 1;
                button.classList.remove('active');
            } else {
                count = type === 'up' ? count + 1 : count - 1;
                button.classList.add('active');
                
                // Remove active class from opposite button
                const oppositeButton = button.parentElement.querySelector(
                    type === 'up' ? '.downvote' : '.upvote'
                );
                if (oppositeButton.classList.contains('active')) {
                    oppositeButton.classList.remove('active');
                    const oppositeCount = oppositeButton.querySelector('.vote-count');
                    oppositeCount.textContent = parseInt(oppositeCount.textContent) + (type === 'up' ? 1 : -1);
                }
            }
            
            countSpan.textContent = count;
        }
    </script>
</body>
</html>
