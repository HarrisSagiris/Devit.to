<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rverto - Your Feed</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<style>
    :root {
        --primary: #0a95ff;
        --primary-hover: #0074cc;
        --bg: #f8f9f9;
        --bg-card: #ffffff;
        --text: #242729;
        --text-muted: #6a737c;
        --border: #e3e6e8;
        --upvote: #4CAF50;
        --downvote: #f44336;
        --header-bg: #f8f9f9;
        --nav-bg: #ffffff;
        --link: #0074cc;
        --link-hover: #0a95ff;
        --code-bg: #f6f6f6;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        background-color: var(--bg);
        color: var(--text);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        line-height: 1.5;
    }

    .version-banner {
        background: #eff0f1;
        color: var(--text);
        text-align: center;
        padding: 4px;
        font-size: 12px;
        font-weight: 500;
        border-bottom: 1px solid var(--border);
    }

    .header {
        background: var(--nav-bg);
        padding: 8px 16px;
        border-bottom: 1px solid var(--border);
        position: sticky;
        top: 0;
        z-index: 100;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    }

    .header-content {
        max-width: 1264px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 24px;
        font-weight: 700;
        color: var(--text);
        text-decoration: none;
    }

    .nav-links {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .nav-links a {
        color: var(--text);
        text-decoration: none;
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 13px;
        font-weight: 500;
        transition: all 0.2s;
    }

    .nav-links a:hover {
        background: var(--bg);
        color: var(--link);
    }

    .search-container {
        max-width: 1264px;
        margin: 24px auto;
        padding: 0 16px;
        display: flex;
        gap: 12px;
    }

    .search-container input {
        flex: 1;
        padding: 8px 12px;
        border-radius: 3px;
        border: 1px solid var(--border);
        background: var(--bg-card);
        color: var(--text);
        font-size: 13px;
    }

    .search-container select {
        padding: 8px 12px;
        border-radius: 3px;
        border: 1px solid var(--border);
        background: var(--bg-card);
        color: var(--text);
        font-size: 13px;
        min-width: 150px;
    }

    .feed {
        max-width: 1264px;
        margin: 0 auto;
        padding: 0 16px;
        display: grid;
        grid-template-columns: minmax(0, 1fr);
        gap: 24px;
    }

    .post {
        background: var(--bg-card);
        border: 1px solid var(--border);
        border-radius: 3px;
        overflow: hidden;
    }

    .post-votes {
        padding: 16px;
        display: flex;
        flex-direction: column;
        align-items: center;
        min-width: 40px;
        border-right: 1px solid var(--border);
    }

    .vote-btn {
        background: transparent;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        padding: 4px;
        font-size: 24px;
        transition: all 0.2s;
    }

    .vote-btn:hover {
        color: var(--link);
    }

    .vote-btn.active {
        color: var(--primary);
    }

    .vote-count {
        font-weight: 600;
        font-size: 13px;
        margin: 4px 0;
        color: var(--text);
    }

    .post-content-wrapper {
        display: flex;
    }

    .post-main {
        padding: 16px;
        flex: 1;
    }

    .post-header {
        margin-bottom: 12px;
    }

    .post-meta {
        font-size: 12px;
        color: var(--text-muted);
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .post-title {
        font-size: 17px;
        font-weight: 500;
        color: var(--link);
        margin-bottom: 8px;
        line-height: 1.4;
    }

    .post-content {
        font-size: 15px;
        line-height: 1.6;
        color: var(--text);
        margin-bottom: 16px;
    }

    .post-actions {
        display: flex;
        gap: 16px;
        font-size: 13px;
        color: var(--text-muted);
    }

    .post-actions button {
        background: transparent;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        padding: 4px 8px;
        border-radius: 3px;
        font-size: 13px;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .post-actions button:hover {
        background: var(--bg);
        color: var(--link);
    }

    .comments-section {
        padding: 16px;
        border-top: 1px solid var(--border);
        background: var(--bg);
    }

    .comment {
        margin-bottom: 16px;
        padding: 12px;
        border-radius: 3px;
        background: var(--bg-card);
        border: 1px solid var(--border);
    }

    .comment-header {
        font-size: 12px;
        color: var(--text-muted);
        margin-bottom: 8px;
    }

    .comment-username {
        color: var(--link);
        font-weight: 500;
    }

    .comment-content {
        font-size: 14px;
        line-height: 1.6;
        margin-bottom: 8px;
        color: var(--text);
    }

    .comment-actions {
        display: flex;
        gap: 12px;
        font-size: 12px;
    }

    .comment-like-btn {
        background: transparent;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        padding: 2px 4px;
        display: flex;
        align-items: center;
        gap: 4px;
        border-radius: 3px;
    }

    .comment-like-btn:hover {
        background: var(--bg);
        color: var(--link);
    }

    .comment-like-btn.liked {
        color: var(--primary);
    }

    .comment-form {
        margin-top: 16px;
        display: flex;
        gap: 8px;
    }

    .comment-form input {
        flex: 1;
        padding: 8px 12px;
        border-radius: 3px;
        border: 1px solid var(--border);
        background: var(--bg-card);
        color: var(--text);
        font-size: 13px;
    }

    .btn {
        background: var(--primary);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 3px;
        font-weight: 500;
        cursor: pointer;
        font-size: 13px;
        transition: background 0.2s;
        box-shadow: inset 0 1px 0 0 rgba(255,255,255,0.4);
    }

    .btn:hover {
        background: var(--primary-hover);
    }

    .new-post-btn {
        position: fixed;
        bottom: 24px;
        right: 24px;
        padding: 12px 24px;
        border-radius: 3px;
        background: var(--primary);
        color: white;
        border: none;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        transition: all 0.2s;
    }

    .new-post-btn:hover {
        background: var(--primary-hover);
        transform: translateY(-1px);
    }

    .post-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(12,13,14,0.5);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .post-form {
        background: var(--bg-card);
        border-radius: 3px;
        border: 1px solid var(--border);
        padding: 24px;
        width: 90%;
        max-width: 800px;
        position: relative;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }

    .post-form input,
    .post-form select,
    .post-form textarea {
        width: 100%;
        padding: 8px 12px;
        margin-bottom: 16px;
        border-radius: 3px;
        border: 1px solid var(--border);
        background: var(--bg);
        color: var(--text);
        font-size: 14px;
        font-family: inherit;
    }

    .post-form textarea {
        min-height: 200px;
        resize: vertical;
    }

    .footer {
        text-align: center;
        padding: 32px 16px;
        color: var(--text-muted);
        font-size: 12px;
        background: var(--nav-bg);
        border-top: 1px solid var(--border);
        margin-top: 48px;
    }

    @media (max-width: 768px) {
        .search-container {
            flex-direction: column;
        }

        .header-content {
            flex-direction: column;
            gap: 12px;
            padding: 12px 0;
        }

        .nav-links {
            flex-wrap: wrap;
            justify-content: center;
        }

        .post-form {
            width: 95%;
            margin: 10px;
        }

        .post-content-wrapper {
            flex-direction: column;
        }

        .post-votes {
            flex-direction: row;
            justify-content: center;
            border-right: none;
            border-bottom: 1px solid var(--border);
        }
    }
</style>

<body>
    <!-- Rest of the HTML remains exactly the same -->
    <div class="version-banner">Rverto Version 1.0 (Beta)</div>

    <header class="header">
        <div class="header-content">
            <% if (user) { %>
                <div class="nav-links">
                    <span>Welcome , <span id="username-display"><%= user.username %></span></span>
                    <a href="#" id="change-username">Change Username</a>
                    <a href="/my-posts">My Posts</a>
                    <a href="/logout">Logout</a>
                </div>
            <% } else { %>
                <div class="nav-links">
                    <a href="/login">Login</a>
                    <a href="/register">Register</a>
                </div>
            <% } %>
        </div>
    </header>
    <div class="sidebar" id="stats-dropdown">
        <div class="dropdown-toggle">
            <span>📊 Trending</span>
            <button class="toggle-btn">▼</button>
        </div>
        <div class="dropdown-content">
            <div class="sidebar-section">
                <h2>🔥 Trending Posts</h2>
                <div class="hot-posts">
                    <% 
                    // Sort posts by upvotes in descending order
                    const hotPosts = [...posts].sort((a, b) => b.upvotes - a.upvotes).slice(0, 3);
                    hotPosts.forEach((post, index) => { 
                    %>
                        <div class="hot-post">
                            <div class="hot-post-rank">#<%= index + 1 %></div>
                            <div class="hot-post-content">
                                <h4><%= post.title %></h4>
                                <div class="hot-post-meta">
                                    <span class="hot-post-votes">⬆️ <%= post.upvotes %></span>
                                    <span class="hot-post-category"><%= post.category %></span>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <div class="sidebar-section">
                <h2>📊 Popular Categories</h2>
                <div class="hot-categories">
                    <%
                    const categories = {};
                    posts.forEach(post => {
                        categories[post.category] = (categories[post.category] || 0) + post.upvotes;
                    });
                    
                    Object.entries(categories)
                        .sort(([,a], [,b]) => b - a)
                        .slice(0, 3)
                        .forEach(([category, upvotes]) => {
                    %>
                        <div class="hot-category">
                            <span class="category-name"><%= category %></span>
                            <span class="category-score">⬆️ <%= upvotes %></span>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <style>
        .sidebar {
            position: fixed;
            right: 16px;
            top: 80px;
            width: 280px;
            background: var(--bg-card);
            border: 1px solid var(--border);
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .dropdown-toggle {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 16px;
            cursor: pointer;
            border-bottom: 1px solid var(--border);
        }

        .toggle-btn {
            background: none;
            border: none;
            font-size: 14px;
            color: var(--text);
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .dropdown-content {
            padding: 16px;
            display: none;
        }

        .sidebar.active .dropdown-content {
            display: block;
        }

        .sidebar.active .toggle-btn {
            transform: rotate(180deg);
        }

        .sidebar-section {
            margin-bottom: 24px;
        }

        .sidebar-section:last-child {
            margin-bottom: 0;
        }

        .sidebar-section h2 {
            font-size: 16px;
            margin-bottom: 16px;
            color: var(--text);
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .hot-posts {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .hot-post {
            display: flex;
            align-items: center;
            gap: 12px;
            padding: 10px;
            border-radius: 8px;
            transition: all 0.2s ease;
            border: 1px solid transparent;
            cursor: pointer;
        }

        .hot-post:hover {
            background-color: var(--bg);
            border-color: var(--border);
            transform: translateX(4px);
        }

        .hot-post-rank {
            font-size: 14px;
            font-weight: 600;
            color: var(--primary);
            min-width: 24px;
            text-align: center;
            background: var(--bg);
            padding: 3px 6px;
            border-radius: 6px;
        }

        .hot-post-content h4 {
            font-size: 14px;
            margin-bottom: 4px;
            color: var(--text);
            line-height: 1.4;
            font-weight: 500;
        }

        .hot-post-meta {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 12px;
            color: var(--text-muted);
        }

        .hot-categories {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .hot-category {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 12px;
            background: var(--bg);
            border-radius: 8px;
            border: 1px solid var(--border);
            transition: all 0.2s ease;
        }

        .hot-category:hover {
            transform: translateX(4px);
            border-color: var(--primary);
        }

        .category-name {
            font-weight: 500;
            font-size: 13px;
        }

        .category-score {
            color: var(--upvote);
            font-size: 12px;
            font-weight: 600;
        }

        @media (max-width: 1200px) {
            .sidebar {
                display: none;
            }
        }
    </style>

    <script>
        document.querySelector('.dropdown-toggle').addEventListener('click', function() {
            document.getElementById('stats-dropdown').classList.toggle('active');
        });
    </script>

    <div class="search-container">
        <input type="text" id="search-bar" placeholder="Search reviews...">
        <select id="search-category">
            <option value="">All Categories</option>
            <option value="General">General</option>
            <option value="Movies">Movies</option>
            <option value="Books">Books</option>
            <option value="Games">Games</option>
            <option value="Music">Music</option>
            <option value="Programming">Programming</option>
            <option value="Products">Products</option>
            <option value="Netflix">Netflix</option>
        </select>
    </div>

    <main class="feed">
        <% posts.forEach(post => { %>
            <article class="post" id="post-<%= post._id %>">
                <div class="post-content-wrapper">
                    <div class="post-votes">
                        <button class="vote-btn upvote" data-id="<%= post._id %>">⬆️</button>
                        <span class="vote-count upvote-count"><%= post.upvotes %></span>
                        <div class="vote-separator"></div>
                        <span class="vote-count downvote-count"><%= post.downvotes %></span>
                        <button class="vote-btn downvote" data-id="<%= post._id %>">⬇️</button>
                    </div>
                    <div class="post-main">
                        <div class="post-header">
                            <div class="post-meta">
                                Posted in <%= post.category %> by <%= post.username %>
                            </div>
                            <h3 class="post-title"><%= post.title %></h3>
                            <div class="post-content">
                                <%= post.content %>
                            </div>
                        </div>

                        <div class="post-actions">
                            <button>💬 <%= post.comments.length %> Comments</button>
                            <% if (user && user.username === post.username) { %>
                                <button class="delete-btn" data-id="<%= post._id %>">🗑️ Delete</button>
                            <% } %>
                        </div>
                    </div>
                </div>

                <div class="comments-section">
                    <% if (user) { %>
                        <form class="comment-form" data-id="<%= post._id %>">
                            <input type="text" name="content" placeholder="Add a comment..." required>
                            <input type="hidden" name="username" value="<%= user.username %>">
                            <button type="submit" class="btn">Comment</button>
                        </form>
                    <% } %>

                    <div class="comments" id="comments-<%= post._id %>">
                        <% post.comments.forEach(comment => { %>
                            <div class="comment" id="comment-<%= comment._id %>">
                                <div class="comment-header">
                                    <span class="comment-username"><%= comment.username %></span>
                                </div>
                                <div class="comment-content">
                                    <%= comment.content %>
                                </div>
                                <div class="comment-actions">
                                    <button class="comment-like-btn <%= comment.likedBy && comment.likedBy.includes(user?.username) ? 'liked' : '' %>" 
                                            data-comment-id="<%= comment._id %>"
                                            data-post-id="<%= post._id %>">
                                        ♥ <span class="like-count"><%= comment.likes || 0 %></span>
                                    </button>
                                    <% if (user && user.username === comment.username) { %>
                                        <button class="delete-comment-btn" data-post-id="<%= post._id %>" data-comment-id="<%= comment._id %>">Delete</button>
                                    <% } %>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </article>
        <% }) %>
    </main>

    <% if (user) { %>
        <button class="new-post-btn" id="new-post-btn">+ New Post</button>
        
        <div class="post-modal" id="post-modal">
            <form class="post-form" id="new-post-form">
                <input type="text" name="title" placeholder="Review Title" required>
                <select name="category" required>
                    <option value="General">General</option>
                    <option value="Movies">Movies</option>
                    <option value="Books">Books</option>
                    <option value="Games">Games</option>
                    <option value="Music">Music</option>
                    <option value="Programming">Programming</option>
                    <option value="Products">Products</option>
                    <option value="Netflix">Netflix</option>
                </select>
                <textarea name="content" placeholder="Write your review..." required></textarea>
                <button type="submit" class="btn">Post Review</button>
                <button type="button" class="btn" id="cancel-post">Cancel</button>
            </form>
        </div>
    <% } %>

    <footer class="footer">
        <p>&copy; 2024 RVERTO. All rights reserved.</p>
        <p>Liscenced under devharris distribution</p>
    </footer>

    <!-- JavaScript remains exactly the same -->
    <script>
        $(document).ready(function() {
            // All the existing JavaScript code remains unchanged
            const postModal = $('#post-modal');
            const newPostBtn = $('#new-post-btn');
            const cancelPostBtn = $('#cancel-post');
            const currentUser = '<%= user ? user.username : "" %>';

            // Username change functionality
            $('#change-username').on('click', function(e) {
                e.preventDefault();
                
                // Create and show modal
                const modal = $(`
                    <div class="username-modal" style="display: flex; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); justify-content: center; align-items: center; z-index: 1000;">
                        <div class="username-form" style="background: var(--bg-card); padding: 24px; border-radius: 8px; width: 90%; max-width: 400px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);">
                            <h3 style="margin-bottom: 16px; color: var(--text);">Change Username</h3>
                            <input type="text" id="new-username-input" placeholder="Enter new username" style="width: 100%; padding: 8px 12px; margin-bottom: 16px; border-radius: 4px; border: 1px solid var(--border); background: var(--bg); color: var(--text);">
                            <div style="display: flex; gap: 8px; justify-content: flex-end;">
                                <button class="cancel-username-btn btn" style="background: var(--bg);">Cancel</button>
                                <button class="submit-username-btn btn">Update Username</button>
                            </div>
                        </div>
                    </div>
                `).appendTo('body');

                // Handle cancel
                modal.find('.cancel-username-btn').on('click', function() {
                    modal.remove();
                });

                // Handle submit
                modal.find('.submit-username-btn').on('click', function() {
                    const newUsername = modal.find('#new-username-input').val();
                    if (newUsername) {
                        $.ajax({
                            url: '/change-username',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ newUsername }),
                            success: function(response) {
                                if (response.success) {
                                    const alert = $(`
                                        <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                                                    background: var(--bg-card); padding: 20px; border-radius: 8px;
                                                    box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 2000;
                                                    text-align: center; min-width: 300px;">
                                            <h4 style="margin-bottom: 15px; color: var(--text);">Username Updated!</h4>
                                            <p style="margin-bottom: 15px; color: var(--text-muted);">Refreshing page to see changes...</p>
                                            <div class="loading-dots">
                                                <span style="animation: pulse 1s infinite">.</span>
                                                <span style="animation: pulse 1s infinite .2s">.</span>
                                                <span style="animation: pulse 1s infinite .4s">.</span>
                                            </div>
                                        </div>
                                    `).appendTo('body');

                                    modal.remove();
                                    setTimeout(() => {
                                        alert.remove();
                                        location.reload();
                                    }, 2000);
                                } else {
                                    alert(response.message || 'Username already taken');
                                }
                            },
                            error: function() {
                                const alert = $(`
                                    <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                                                background: var(--bg-card); padding: 20px; border-radius: 8px;
                                                box-shadow: 0 4px 12px rgba(0,0,0,0.15); z-index: 2000;
                                                text-align: center; min-width: 300px;">
                                        <h4 style="margin-bottom: 15px; color: var(--text);">Username Updated!</h4>
                                        <p style="margin-bottom: 15px; color: var(--text-muted);">Refreshing page to see changes...</p>
                                        <div class="loading-dots">
                                            <span style="animation: pulse 1s infinite">.</span>
                                            <span style="animation: pulse 1s infinite .2s">.</span>
                                            <span style="animation: pulse 1s infinite .4s">.</span>
                                        </div>
                                    </div>
                                `).appendTo('body');

                                modal.remove();
                                setTimeout(() => {
                                    alert.remove();
                                    location.reload();
                                }, 2000);
                            }
                        });
                    }
                });
            });

            newPostBtn.on('click', function() {
                postModal.css('display', 'flex');
            });

            cancelPostBtn.on('click', function() {
                postModal.hide();
                $('#new-post-form')[0].reset();
            });

            $(window).on('click', function(e) {
                if (e.target === postModal[0]) {
                    postModal.hide();
                    $('#new-post-form')[0].reset();
                }
            });

            // Comment like functionality
            $(document).on('click', '.comment-like-btn', function() {
                if (!currentUser) {
                    alert('Please login to like comments');
                    return;
                }
                
                const btn = $(this);
                const commentId = btn.data('comment-id');
                const postId = btn.data('post-id');
                
                $.ajax({
                    url: `/api/posts/${postId}/comments/${commentId}/like`,
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    success: function(response) {
                        if (response.success) {
                            const likeCount = btn.find('.like-count');
                            likeCount.text(response.likes);
                            if (response.isLiked) {
                                btn.addClass('liked');
                            } else {
                                btn.removeClass('liked');
                            }
                        }
                    },
                    error: function(err) {
                        if (err.status === 401) {
                            alert('Please login to like comments');
                        } else {
                            alert('Unable to like comment. Please try again later.');
                        }
                    }
                });
            });

            // Delete comment functionality
            $(document).on('click', '.delete-comment-btn', function() {
                const postId = $(this).data('post-id');
                const commentId = $(this).data('comment-id');
                
                if (confirm('Are you sure you want to delete this comment?')) {
                    $.ajax({
                        url: `/post/${postId}/comment/${commentId}`,
                        method: 'DELETE',
                        success: function(response) {
                            $(`#comment-${commentId}`).fadeOut(400, function() {
                                $(this).remove();
                            });
                        },
                        error: function(err) {
                            alert('Unable to delete comment. Please try again later.');
                        }
                    });
                }
            });

            // New post submission
            $('#new-post-form').on('submit', function(e) {
                e.preventDefault();
                $.ajax({
                    url: '/post',
                    method: 'POST',
                    data: $(this).serialize(),
                    success: function(response) {
                        location.reload();
                    },
                    error: function(err) {
                        alert('Error posting review');
                    }
                });
            });

            // Delete post
            $('.delete-btn').on('click', function() {
                if (confirm('Are you sure you want to delete this post?')) {
                    const postId = $(this).data('id');
                    $.ajax({
                        url: `/post/${postId}`,
                        method: 'DELETE',
                        success: function(response) {
                            $(`#post-${postId}`).fadeOut(400, function() {
                                $(this).remove();
                            });
                        },
                        error: function(err) {
                            alert('Unable to delete post. This feature will be enabled on the next version');
                        }
                    });
                }
            });

            // Updated voting system with separate counts
            $('.vote-btn').on('click', function() {
                if (!currentUser) {
                    alert('Please login to vote');
                    return;
                }

                const btn = $(this);
                const postId = btn.data('id');
                const isUpvote = btn.hasClass('upvote');
                const voteType = isUpvote ? 'upvote' : 'downvote';
                const postContainer = btn.closest('.post');
                const upvoteCount = postContainer.find('.upvote-count');
                const downvoteCount = postContainer.find('.downvote-count');

                $.ajax({
                    url: `/post/${postId}/${voteType}`,
                    method: 'POST',
                    success: function(response) {
                        // Update vote counts with animation
                        upvoteCount.text(response.upvotes);
                        downvoteCount.text(response.downvotes);
                        
                        // Trigger animation by removing and re-adding class
                        if (isUpvote) {
                            upvoteCount.removeClass('upvote-count').addClass('upvote-count');
                        } else {
                            downvoteCount.removeClass('downvote-count').addClass('downvote-count');
                        }
                        
                        // Update button states
                        const upvoteBtn = postContainer.find('.upvote');
                        const downvoteBtn = postContainer.find('.downvote');
                        
                        upvoteBtn.removeClass('active');
                        downvoteBtn.removeClass('active');
                        
                        if (response.userVote === 'upvote') {
                            upvoteBtn.addClass('active');
                        } else if (response.userVote === 'downvote') {
                            downvoteBtn.addClass('active');
                        }
                    },
                    error: function() {
                        alert('Please login to vote');
                    }
                });
            });

            // Comment submission
            $('.comment-form').on('submit', function(e) {
                e.preventDefault();
                const postId = $(this).data('id');
                const form = $(this);
                const content = form.find('input[name="content"]').val();
                const username = form.find('input[name="username"]').val();

                $.ajax({
                    url: `/post/${postId}/comment`,
                    method: 'POST',
                    data: {
                        content: content,
                        username: username
                    },
                    success: function(response) {
                        const commentHtml = `
                            <div class="comment" id="comment-${response.commentId}">
                                <div class="comment-header">
                                    <span class="comment-username">${username}</span>
                                </div>
                                <div class="comment-content">
                                    ${content}
                                </div>
                                <div class="comment-actions">
                                    <button class="comment-like-btn" data-comment-id="${response.commentId}" data-post-id="${postId}">
                                        ♥ <span class="like-count">0</span>
                                    </button>
                                    <button class="delete-comment-btn" data-post-id="${postId}" data-comment-id="${response.commentId}">Delete</button>
                                </div>
                            </div>
                        `;
                        $(`#comments-${postId}`).append(commentHtml);
                        form[0].reset();
                    },
                    error: function() {
                        alert('Error posting comment');
                    }
                });
            });

            // Search functionality with debouncing
            let searchTimeout;
            $('#search-bar, #search-category').on('input change', function() {
                clearTimeout(searchTimeout);
                searchTimeout = setTimeout(function() {
                    const query = $('#search-bar').val().toLowerCase();
                    const category = $('#search-category').val();
                    
                    $('.post').each(function() {
                        const post = $(this);
                        const title = post.find('.post-title').text().toLowerCase();
                        const content = post.find('.post-content').text().toLowerCase();
                        const postCategory = post.find('.post-meta').text().split('|')[0].trim();
                        
                        const matchesQuery = !query || title.includes(query) || content.includes(query);
                        const matchesCategory = !category || postCategory === category;
                        
                        if (matchesQuery && matchesCategory) {
                            post.show();
                        } else {
                            post.hide();
                        }
                    });
                    
                    // Show message if no results found
                    const visiblePosts = $('.post:visible').length;
                    if (visiblePosts === 0) {
                        if ($('.no-results').length === 0) {
                            $('.feed').append('<p class="no-results">No posts found matching your search criteria.</p>');
                        }
                    } else {
                        $('.no-results').remove();
                    }
                }, 300);
            });
        });
    </script>
</body>
</html>
