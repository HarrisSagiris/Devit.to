<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reputation - Devit.to</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #6366f1;
            --primary-hover: #4f46e5;
            --bg: #f9fafb;
            --bg-card: #ffffff;
            --text: #1f2937;
            --text-muted: #6b7280;
            --border: #e5e7eb;
            --upvote: #10b981;
            --downvote: #ef4444;
            --header-bg: #ffffff;
            --nav-bg: #ffffff;
            --link: #4f46e5;
            --link-hover: #6366f1;
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        }

        [data-theme="dark"] {
            --bg: #1a1b1e;
            --bg-card: #2a2b2e;
            --text: #e5e7eb;
            --text-muted: #9ca3af;
            --border: #374151;
            --header-bg: #2a2b2e;
            --nav-bg: #2a2b2e;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background-color: var(--bg);
            color: var(--text);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            line-height: 1.5;
            transition: background-color 0.3s, color 0.3s;
        }

        .header {
            background: var(--nav-bg);
            padding: 1rem;
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: var(--shadow);
            transition: background-color 0.3s;
        }

        .header-content {
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 1rem;
        }

        .logo {
            font-family: 'Poppins', sans-serif;
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .logo i {
            font-size: 1.75rem;
        }

        .nav-links {
            display: flex;
            align-items: center;
            gap: 1.5rem;
        }

        .nav-links a, .nav-links button {
            color: var(--text);
            text-decoration: none;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s;
            border: none;
            background: none;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .nav-links a:hover, .nav-links button:hover {
            background: var(--bg);
            color: var(--primary);
            transform: translateY(-1px);
        }

        .create-post-btn {
            background: var(--primary) !important;
            color: white !important;
            box-shadow: var(--shadow);
        }

        .create-post-btn:hover {
            background: var(--primary-hover) !important;
            transform: translateY(-2px) !important;
            box-shadow: var(--shadow-lg) !important;
        }

        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 1rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2.5rem;
        }

        .stat-card {
            background: var(--bg-card);
            padding: 1.75rem;
            border-radius: 1rem;
            box-shadow: var(--shadow);
            transition: all 0.3s;
            border: 1px solid var(--border);
        }

        .stat-card:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }

        .stat-card h3 {
            color: var(--text-muted);
            font-size: 0.875rem;
            margin-bottom: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .stat-card .value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--text);
            display: flex;
            align-items: baseline;
            gap: 0.5rem;
        }

        .stat-card .trend {
            font-size: 0.875rem;
            color: var(--upvote);
        }

        .post {
            background: var(--bg-card);
            border-radius: 1rem;
            padding: 1.75rem;
            margin-bottom: 1.5rem;
            box-shadow: var(--shadow);
            transition: all 0.3s;
            border: 1px solid var(--border);
            position: relative;
            overflow: hidden;
        }

        .post:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }

        .post::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: var(--primary);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .post:hover::before {
            opacity: 1;
        }

        .post-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.25rem;
        }

        .post-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text);
            transition: color 0.2s;
        }

        .post:hover .post-title {
            color: var(--primary);
        }

        .category-badge {
            background: var(--primary);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.75rem;
            font-weight: 600;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            box-shadow: var(--shadow);
        }

        .post-content {
            color: var(--text);
            margin-bottom: 1.5rem;
            line-height: 1.7;
        }

        .post-stats {
            display: flex;
            gap: 1.5rem;
            color: var(--text-muted);
            font-size: 0.875rem;
            align-items: center;
        }

        .post-stats span {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .post-actions {
            margin-top: 1.5rem;
            display: flex;
            gap: 1rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.75rem;
            font-size: 0.875rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s;
            border: none;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .edit-btn {
            background: var(--bg);
            color: var(--text);
            border: 1px solid var(--border);
        }

        .edit-btn:hover {
            background: var(--primary);
            color: white;
            transform: translateY(-2px);
        }

        .delete-btn {
            background: var(--downvote);
            color: white;
        }

        .delete-btn:hover {
            background: #dc2626;
            transform: translateY(-2px);
        }

        .comments-section {
            margin-top: 1.5rem;
            padding-top: 1.5rem;
            border-top: 1px solid var(--border);
        }

        .comments-section h4 {
            margin-bottom: 1rem;
            color: var(--text);
            font-size: 1.1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .comment {
            background: var(--bg);
            padding: 1.25rem;
            border-radius: 0.75rem;
            margin-bottom: 1rem;
            transition: all 0.2s;
            border: 1px solid var(--border);
        }

        .comment:hover {
            transform: translateX(5px);
            box-shadow: var(--shadow);
        }

        .comment-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.75rem;
            font-size: 0.875rem;
            color: var(--text-muted);
        }

        .no-posts {
            text-align: center;
            padding: 4rem 2rem;
            background: var(--bg-card);
            border-radius: 1rem;
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
        }

        .no-posts h2 {
            color: var(--text);
            margin-bottom: 1rem;
            font-size: 1.75rem;
        }

        .no-posts p {
            color: var(--text-muted);
            margin-bottom: 2rem;
        }

        .filters {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
            flex-wrap: wrap;
        }

        .filters select, .search-bar {
            padding: 0.75rem 1.25rem;
            border-radius: 0.75rem;
            border: 1px solid var(--border);
            background: var(--bg-card);
            color: var(--text);
            font-size: 0.875rem;
            transition: all 0.2s;
            box-shadow: var(--shadow-sm);
        }

        .filters select:hover, .search-bar:hover {
            border-color: var(--primary);
        }

        .filters select:focus, .search-bar:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
        }

        .search-bar {
            flex: 1;
            min-width: 200px;
        }

        /* New Activity Feed Styles */
        .activity-feed {
            margin: 2rem 0;
            padding: 2rem;
            background: var(--bg-card);
            border-radius: 1rem;
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
        }

        .activity-feed h2 {
            font-size: 1.5rem;
            color: var(--text);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .activity-item {
            padding: 1rem;
            border-left: 3px solid var(--primary);
            margin-bottom: 1rem;
            background: var(--bg);
            border-radius: 0.5rem;
            transition: all 0.2s;
        }

        .activity-item:hover {
            transform: translateX(5px);
            box-shadow: var(--shadow);
        }

        .activity-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-size: 0.875rem;
            color: var(--text-muted);
        }

        .activity-type {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: var(--primary);
        }

        .activity-content {
            color: var(--text);
            font-size: 0.925rem;
        }

        .activity-meta {
            margin-top: 0.5rem;
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        @media (max-width: 768px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }
            
            .filters {
                flex-direction: column;
            }
            
            .search-bar {
                width: 100%;
            }
            
            .post-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }
        }

        .theme-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
            margin-left: auto;
        }

        .theme-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--bg-card);
            transition: .4s;
            border-radius: 34px;
            border: 2px solid var(--primary);
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 2px;
            background-color: var(--primary);
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary);
        }

        input:checked + .slider:before {
            transform: translateX(26px);
            background-color: white;
        }
        .devcard {
            background: linear-gradient(45deg, var(--primary), var(--primary-hover));
            border-radius: 10px;
            padding: 20px;
            color: white;
            margin: 20px 0;
            box-shadow: var(--shadow-lg);
            position: relative;
            overflow: hidden;
        }

        .devcard::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url("data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z' fill='rgba(255,255,255,.1)' fill-rule='evenodd'/%3E%3C/svg%3E");
            opacity: 0.5;
        }

        .devcard-content {
            position: relative;
            z-index: 1;
        }

        .devcard-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .devcard-header img {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            margin-right: 15px;
            border: 3px solid white;
        }

        .devcard-name {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .devcard-username {
            font-size: 1rem;
            opacity: 0.9;
        }

        .devcard-stats {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 15px;
            margin: 20px 0;
        }

        .devcard-stat {
            text-align: center;
            background: rgba(255, 255, 255, 0.1);
            padding: 10px;
            border-radius: 8px;
        }

        .devcard-stat-value {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .devcard-stat-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        .devcard-footer {
            margin-top: 20px;
            display: flex;
            gap: 10px;
        }

        .copy-markdown {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
            font-weight: 500;
        }

        .copy-markdown:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        .copy-markdown i {
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="header-content">
            <a href="/" class="logo">
                <i class="fas fa-code"></i>
                Devit.to
            </a>
            <nav class="nav-links">
                <a href="/" class="create-post-btn">
                    <i class="fas fa-home"></i>
                    My Feed
                </a>
                <label class="theme-switch">
                    <input type="checkbox" id="theme-toggle">
                    <span class="slider"></span>
                </label>
            </nav>
        </div>
    </header>

    <div class="container">
        <div class="stats-grid">
            <div class="stat-card">
                <h3><i class="fas fa-file-alt"></i> Total Posts</h3>
                <div class="value">
                    <%= posts.length %>
                </div>
            </div>
            <div class="stat-card">
                <h3><i class="fas fa-thumbs-up"></i> Total Upvotes</h3>
                <div class="value">
                    <%= posts.reduce((sum, post) => sum + post.upvotes, 0) %>
                </div>
            </div>
            <div class="stat-card">
                <h3><i class="fas fa-comments"></i> Total Comments</h3>
                <div class="value">
                    <%= posts.reduce((sum, post) => sum + post.comments.length, 0) %>
                </div>
            </div>
            <div class="stat-card">
                <h3><i class="fas fa-tag"></i> Most Popular Category</h3>
                <div class="value" style="font-size: 1.5rem;">
                    <%= posts.length ? posts.reduce((acc, post) => {
                        acc[post.category] = (acc[post.category] || 0) + 1;
                        return acc;
                    }, {})[0] : 'N/A' %>
                </div>
            </div>
        </div>

        <!-- New Activity Feed Section -->
        <div class="activity-feed">
            <h2><i class="fas fa-chart-line"></i> Recent Activity</h2>
            
            <% if (posts && posts.length > 0) { %>
                <% 
                // Get all activities from posts
                const activities = posts.reduce((acc, post) => {
                    // Add post creation
                    acc.push({
                        type: 'post',
                        timestamp: post.createdAt,
                        content: post.title,
                        postTitle: post.title
                    });
                    
                    // Add upvotes
                    if (post.upvoteActivities && post.upvoteActivities.length) {
                        post.upvoteActivities.forEach(upvote => {
                            acc.push({
                                type: 'upvote',
                                timestamp: upvote.timestamp,
                                content: 'Someone upvoted your post!',
                                postTitle: post.title
                            });
                        });
                    }

                    // Add comments
                    post.comments.forEach(comment => {
                        acc.push({
                            type: 'comment',
                            timestamp: comment.createdAt,
                            content: comment.content,
                            postTitle: post.title
                        });
                        
                        // Add comment replies
                        comment.replies.forEach(reply => {
                            acc.push({
                                type: 'reply', 
                                timestamp: reply.createdAt,
                                content: reply.content,
                                postTitle: post.title
                            });
                        });
                    });
                    
                    return acc;
                }, []);
                
                // Sort by most recent and take first 10
                activities.sort((a,b) => b.timestamp - a.timestamp);
                activities.slice(0, 10).forEach(activity => { 
                %>
                    <div class="activity-item">
                        <div class="activity-header">
                            <% if (activity.type === 'post') { %>
                                <span class="activity-type">
                                    <i class="fas fa-file-alt"></i> New Post
                                </span>
                            <% } else if (activity.type === 'comment') { %>
                                <span class="activity-type">
                                    <i class="fas fa-comment"></i> New Comment
                                </span>
                            <% } else if (activity.type === 'reply') { %>
                                <span class="activity-type">
                                    <i class="fas fa-reply"></i> Replied to Comment
                                </span>
                            <% } else if (activity.type === 'upvote') { %>
                                <span class="activity-type">
                                    <i class="fas fa-thumbs-up"></i> New Upvote
                                </span>
                            <% } %>
                            <span><%= new Date(activity.timestamp).toLocaleDateString() %></span>
                        </div>
                        <div class="activity-content">
                            <%= activity.content %>
                        </div>
                        <div class="activity-meta">
                            <% if (activity.postTitle && activity.type !== 'post') { %>
                                On post: <%= activity.postTitle %>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="activity-item">
                    <div class="activity-content">
                        No recent activity to show.
                    </div>
                </div>
            <% } %>
        </div>

        <div class="filters">
            <input type="text" class="search-bar" placeholder="Search your posts...">
            <select id="categoryFilter">
                <option value="">All Categories</option>
                <option value="General">General</option>
                <option value="Javascript/Typescript">Javascript/Typescript</option>
                <option value="c++">C++</option>
                <option value="Gaming">Gaming</option>
                <option value="Python">Python</option>
                <option value="php">PHP</option>
                <option value="Tech">Tech</option>
                <option value="AI">AI</option>
            </select>
            <select id="sortBy">
                <option value="newest">Newest First</option>
                <option value="oldest">Oldest First</option>
                <option value="popular">Most Popular</option>
                <option value="comments">Most Comments</option>
            </select>
        </div>

        <div id="myPostsContainer">
            <% if (posts && posts.length > 0) { %>
                <% posts.forEach(post => { %>
                    <div class="post" id="post-<%= post._id %>">
                        <div class="post-content" id="content-<%= post._id %>">
                            <div class="post-header">
                                <h2 class="post-title" id="title-<%= post._id %>"><%= post.title %></h2>
                                <span class="category-badge"><%= post.category %></span>
                            </div>
                            <p class="post-content content-text"><%= post.content %></p>
                            <div class="post-stats">
                                <span><i class="fas fa-thumbs-up"></i> <%= post.upvotes %> upvotes</span>
                                <span><i class="fas fa-thumbs-down"></i> <%= post.downvotes %> downvotes</span>
                                <span><i class="fas fa-comments"></i> <%= post.comments.length %> comments</span>
                                <span><i class="far fa-calendar-alt"></i> <%= new Date(post.createdAt).toLocaleDateString() %></span>
                            </div>
                        </div>
                        
                        <div class="post-actions">
                            <button class="btn edit-btn" data-id="<%= post._id %>">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn delete-btn" data-id="<%= post._id %>">
                                <i class="fas fa-trash-alt"></i> Delete
                            </button>
                        </div>

                        <div class="comments-section">
                            <h4><i class="fas fa-comments"></i> Recent Comments</h4>
                            <% post.comments.slice(-3).forEach(comment => { %>
                                <div class="comment">
                                    <div class="comment-header">
                                        <span><i class="fas fa-user"></i> <%= comment.author %></span>
                                        <span><i class="far fa-clock"></i> <%= new Date(comment.createdAt).toLocaleDateString() %></span>
                                    </div>
                                    <%= comment.content %>
                                </div>
                            <% }) %>
                            <% if (post.comments.length > 3) { %>
                                <button class="btn view-all-comments" data-id="<%= post._id %>">
                                    <i class="fas fa-chevron-down"></i>
                                    View all <%= post.comments.length %> comments
                                </button>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="no-posts">
                    <h2>No Posts Yet</h2>
                    <p>Share your thoughts and experiences with the community!</p>
                    <a href="/create-post" class="btn create-post-btn">
                        <i class="fas fa-plus"></i>
                        Create Your First Post
                    </a>
                </div>
            <% } %>
        </div>
    </div>
    <!-- DevCard Generator Section -->
    <div class="devcard-generator">
        <h2><i class="fas fa-id-card"></i> Your DevCard</h2>
        <div class="devcard-preview">
            <div class="devcard-header">
                <img src="https://github.com/<%= user.username %>.png" onerror="this.src='/images/default-avatar.png'" alt="Profile" class="devcard-avatar">
                <div class="devcard-info">
                    <h3><%= user.username %></h3>
                    <p>Developer at Devit.to</p>
                    <div class="devcard-badges">
                        <span class="badge"><i class="fas fa-star"></i> Top Contributor</span>
                        <span class="badge"><i class="fas fa-award"></i> <%= posts.length > 10 ? 'Expert' : 'Rising Star' %></span>
                    </div>
                </div>
            </div>

            <div class="devcard-stats">
                <div class="devcard-stat">
                    <div class="devcard-stat-value"><%= posts.length %></div>
                    <div class="devcard-stat-label">Posts</div>
                    <div class="stat-trend <%= posts.length > 5 ? 'positive' : '' %>">
                        <i class="fas fa-chart-line"></i>
                    </div>
                </div>
                <div class="devcard-stat">
                    <div class="devcard-stat-value"><%= posts.reduce((sum, post) => sum + post.upvotes, 0) %></div>
                    <div class="devcard-stat-label">Upvotes</div>
                    <div class="stat-trend positive">
                        <i class="fas fa-arrow-up"></i>
                    </div>
                </div>
                <div class="devcard-stat">
                    <div class="devcard-stat-value"><%= posts.reduce((sum, post) => sum + post.comments.length, 0) %></div>
                    <div class="devcard-stat-label">Comments</div>
                    <div class="stat-trend positive">
                        <i class="fas fa-arrow-up"></i>
                    </div>
                </div>
            </div>

            <div class="devcard-activity">
                <h4><i class="fas fa-chart-bar"></i> Activity Overview</h4>
                <div class="activity-graph">
                    <% 
                        const last7Days = Array(7).fill(0);
                        posts.forEach(post => {
                            const dayIndex = 6 - Math.min(6, Math.floor((Date.now() - new Date(post.createdAt)) / (1000 * 60 * 60 * 24)));
                            if (dayIndex >= 0) last7Days[dayIndex]++;
                        });
                    %>
                    <% last7Days.forEach((count, i) => { %>
                        <div class="graph-bar" style="height: <%= Math.max(20, count * 30) %>px" title="<%= count %> posts">
                            <span class="bar-label"><%= ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][(new Date().getDay() + i + 1) % 7] %></span>
                        </div>
                    <% }); %>
                </div>
            </div>

            <div class="devcard-footer">
                <button class="copy-markdown" onclick="copyDevCardMarkdown()">
                    <i class="fas fa-copy"></i>
                    Copy Markdown
                </button>
                <button class="share-devcard" onclick="shareDevCard()">
                    <i class="fas fa-share-alt"></i>
                    Share
                </button>
                <button class="download-devcard" onclick="downloadDevCard()">
                    <i class="fas fa-download"></i>
                    Download PNG
                </button>
            </div>
        </div>
    </div>

    <style>
        .devcard-generator {
            max-width: 800px;
            margin: 40px auto;
            padding: 20px;
        }

        .devcard-preview {
            background: linear-gradient(135deg, #1a1c2c 0%, #2a2d3e 100%);
            border-radius: 16px;
            padding: 30px;
            color: #fff;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        .devcard-header {
            display: flex;
            align-items: center;
            gap: 24px;
            margin-bottom: 30px;
        }

        .devcard-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            border: 4px solid rgba(255, 255, 255, 0.2);
            object-fit: cover;
        }

        .devcard-info h3 {
            font-size: 28px;
            margin-bottom: 8px;
            background: linear-gradient(90deg, #fff, #a5b4fc);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .devcard-badges {
            display: flex;
            gap: 12px;
            margin-top: 12px;
        }

        .badge {
            background: rgba(255, 255, 255, 0.1);
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 6px;
            backdrop-filter: blur(5px);
        }

        .activity-graph {
            display: flex;
            align-items: flex-end;
            gap: 12px;
            height: 150px;
            padding: 20px 0;
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.05);
        }

        .graph-bar {
            flex: 1;
            background: linear-gradient(180deg, #6366f1 0%, #4f46e5 100%);
            border-radius: 6px 6px 0 0;
            position: relative;
            transition: height 0.3s ease;
            min-height: 20px;
        }

        .bar-label {
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 12px;
            color: rgba(255, 255, 255, 0.7);
        }

        .stat-trend {
            margin-top: 8px;
            font-size: 14px;
            color: #ef4444;
        }

        .stat-trend.positive {
            color: #10b981;
        }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 12px 24px;
            border-radius: 8px;
            animation: slideIn 0.3s ease, fadeOut 0.3s ease 2.7s;
        }

        @keyframes slideIn {
            from { transform: translateY(100px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @keyframes fadeOut {
            from { opacity: 1; }
            to { opacity: 0; }
        }
    </style>

    <script>
    function copyDevCardMarkdown() {
        const username = '<%= user.username %>';
        const stats = {
            posts: <%= posts.length %>,
            upvotes: <%= posts.reduce((sum, post) => sum + post.upvotes, 0) %>,
            comments: <%= posts.reduce((sum, post) => sum + post.comments.length, 0) %>
        };

        const markdown = `
<div align="center">
  <img src="https://github.com/${username}.png" width="200" height="200" style="border-radius: 50%; border: 4px solid #4f46e5; box-shadow: 0 0 20px rgba(99, 102, 241, 0.5);">
  
  <h2 style="color: #4f46e5; margin: 20px 0;">${username}</h2>
  <p><i>Developer at Devit.to | Building amazing things</i></p>

  <div style="display: flex; justify-content: center; gap: 20px; margin: 30px 0;">
    <div align="center">
      <img src="https://img.shields.io/badge/Posts-${stats.posts}-6366f1?style=for-the-badge&logo=files&logoColor=white"/>
      <img src="https://img.shields.io/badge/Upvotes-${stats.upvotes}-10b981?style=for-the-badge&logo=thumbsup&logoColor=white"/>
      <img src="https://img.shields.io/badge/Comments-${stats.comments}-3b82f6?style=for-the-badge&logo=comments&logoColor=white"/>
    </div>
  </div>

  <div style="background: #1a1c2c; padding: 20px; border-radius: 10px; margin: 20px 0;">
    <h4>🏆 Achievements</h4>
    <p>
      <img src="https://img.shields.io/badge/Status-${stats.posts > 10 ? '🌟 Expert' : '⭐ Rising Star'}-fbbf24?style=flat-square&logo=acclaim&logoColor=white"/>
      <img src="https://img.shields.io/badge/Contributions-${stats.posts + stats.comments}-4f46e5?style=flat-square&logo=github&logoColor=white"/>
      <img src="https://img.shields.io/badge/Activity-Daily-10b981?style=flat-square&logo=clockify&logoColor=white"/>
    </p>
  </div>

  <p><i>Generated with 💜 by <a href="https://devit.to">Devit.to</a></i></p>
</div>`;

        navigator.clipboard.writeText(markdown).then(() => {
            showToast('✨ Markdown copied to clipboard!');
        });
    }

    function shareDevCard() {
        const shareData = {
            title: '✨ My DevCard',
            text: '🚀 Check out my developer stats on Devit.to!',
            url: window.location.href
        };
        
        if (navigator.share) {
            navigator.share(shareData)
                .then(() => showToast('🎉 DevCard shared successfully!'))
                .catch(err => console.error('Error sharing:', err));
        } else {
            showToast('📱 Sharing not supported on this browser');
        }
    }

    function downloadDevCard() {
        html2canvas(document.querySelector('.devcard-preview')).then(canvas => {
            const link = document.createElement('a');
            link.download = 'devcard.png';
            link.href = canvas.toDataURL();
            link.click();
            showToast('💾 DevCard downloaded!');
        });
    }

    function showToast(message) {
        const toast = document.createElement('div');
        toast.className = 'toast';
        toast.innerHTML = message;
        document.body.appendChild(toast);
        setTimeout(() => toast.remove(), 3000);
    }
    </script>
    <script>
        $(document).ready(function() {
            // Theme toggle
            const themeToggle = $('#theme-toggle');
            
            // Check for saved theme preference
            if (localStorage.getItem('theme') === 'dark') {
                document.documentElement.setAttribute('data-theme', 'dark');
                themeToggle.prop('checked', true);
            }

            // Theme switch handler
            themeToggle.change(function() {
                if (this.checked) {
                    document.documentElement.setAttribute('data-theme', 'dark');
                    localStorage.setItem('theme', 'dark');
                } else {
                    document.documentElement.setAttribute('data-theme', 'light');
                    localStorage.setItem('theme', 'light');
                }
            });

            // Search functionality with debounce
            let searchTimeout;
            $('.search-bar').on('input', function() {
                clearTimeout(searchTimeout);
                const searchBar = $(this);
                
                searchTimeout = setTimeout(function() {
                    const searchTerm = searchBar.val().toLowerCase();
                    $('.post').each(function() {
                        const title = $(this).find('.post-title').text().toLowerCase();
                        const content = $(this).find('.content-text').text().toLowerCase();
                        const category = $(this).find('.category-badge').text().toLowerCase();
                        
                        $(this).toggle(
                            title.includes(searchTerm) || 
                            content.includes(searchTerm) || 
                            category.includes(searchTerm)
                        );
                    });
                }, 300);
            });

            // Category filter with animation
            $('#categoryFilter').on('change', function() {
                const category = $(this).val();
                $('.post').each(function() {
                    const postCategory = $(this).find('.category-badge').text();
                    if (!category || postCategory === category) {
                        $(this).fadeIn(300);
                    } else {
                        $(this).fadeOut(300);
                    }
                });
            });

            // Enhanced sort functionality
            $('#sortBy').on('change', function() {
                const sortBy = $(this).val();
                const posts = $('.post').get();
                
                posts.sort((a, b) => {
                    switch(sortBy) {
                        case 'newest':
                            return new Date($(b).find('.post-stats span:last').text()) - 
                                   new Date($(a).find('.post-stats span:last').text());
                        case 'oldest':
                            return new Date($(a).find('.post-stats span:last').text()) - 
                                   new Date($(b).find('.post-stats span:last').text());
                        case 'popular':
                            return parseInt($(b).find('.post-stats span:first').text()) - 
                                   parseInt($(a).find('.post-stats span:first').text());
                        case 'comments':
                            return parseInt($(b).find('.post-stats span:nth-child(3)').text()) - 
                                   parseInt($(a).find('.post-stats span:nth-child(3)').text());
                    }
                });

                const container = $('#myPostsContainer');
                $.each(posts, function(i, post) {
                    $(post).css('opacity', '0').appendTo(container).delay(i * 100).animate({opacity: 1}, 300);
                });
            });

            // Improved delete confirmation
            $('.delete-btn').click(function() {
                const postId = $(this).data('id');
                const post = $(`#post-${postId}`);
                
                if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
                    $.ajax({
                        url: `/post/${postId}`,
                        method: 'DELETE',
                        success: function() {
                            post.slideUp(400, function() {
                                $(this).remove();
                                if ($('.post').length === 0) {
                                    $('#myPostsContainer').html(`
                                        <div class="no-posts">
                                            <h2>No Posts Yet</h2>
                                            <p>Share your thoughts and experiences with the community!</p>
                                            <a href="/create-post" class="btn create-post-btn">
                                                <i class="fas fa-plus"></i>
                                                Create Your First Post
                                            </a>
                                        </div>
                                    `).hide().fadeIn(400);
                                }
                            });
                        },
                        error: function() {
                            alert('Error deleting post. Please try again later.');
                        }
                    });
                }
            });

            // Edit functionality with smooth transitions
            $('.edit-btn').click(function() {
                const postId = $(this).data('id');
                const contentDiv = $(`#content-${postId}`);
                contentDiv.slideUp(300, function() {
                    $(`#edit-form-${postId}`).slideDown(300);
                });
            });
        });
    </script>
</body>
</html>
